version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:8-jessie-browsers
    steps:
        - checkout

        - run:
            name: Provide package-lock.json
            command:  test ! -f package.json && touch package-lock.json || echo "package.json exists"

        # Download and cache dependencies
        - restore_cache:
            keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}
            - v1-dependencies-

        - run:
            name: Installing Dependencies
            command: test -f package.json && npm install || echo "package.json does not exist"

        - save_cache:
            paths:
                - node_modules
            key: v1-dependencies-{{ checksum "package-lock.json" }}

        # run tests!
        - run:
            name: prepare test git user
            command: git config --global user.email "you@example.com" && git config --global user.name "CircleCi Build"

        - run:
            name: Test
            command: npm test

        # - run:
        #     name: Reset package-lock.json
        #     command:  test ! -f package.json && rm package-lock.json || echo "package.json exists"

        # - run:
        #     name: Building Templates
        #     command: npx hlx build

        # - run:
        #     name: Resetting Working Copy
        #     command: git status; git checkout -- .

        # - run:
        #     name: Deploying to Adobe I/O Runtime
        #     command: npx hlx deploy --no-auto --add ${CIRCLE_BRANCH}| cat

        # - run:
        #     name: Activate CDN
        #     command: npx hlx publish | cat

        # - run:
        #     name: Test Performance
        #     command: |
        #         mkdir -p junit
        #         if [ ! -z $HLX_CALIBRE_AUTH ]; then
        #             npx hlx perf --junit junit/test-results.xml
        #         else
        #             echo "Add HLX_CALIBRE_AUTH to your CircleCI config to enable performance testing"
        #         fi
